dist: trusty
sudo: required
language: java
jdk:
  - oraclejdk8
services:
  - docker
node_js:
  - "8.2.1"

cache:
  directories:
    - $HOME/.m2

matrix:
  include:
  - name: "AllUnitTests"
    before_install:
      - docker run -d -p 5433:5432 -e POSTGRES_PASSWORD=therapist -e POSTGRES_USER=postgres -e POSTGRES_DB=therapist --name postgis mdillon/postgis
    script: travis_wait 20 mvn test -Dspring.datasource.url=jdbc:postgresql://localhost:5433/therapist
  - name: "Docker Compose Postman Test"
    before_install:
      - cd test
      - docker-compose config
      - echo "Starting Therapist Area in Docker containers"
      - docker-compose ps
      - docker-compose pull
      - docker-compose up -d
      - |
        WAIT_INTERVAL=1
        COUNTER=0
        TIMEOUT=100
        t0=`date +%s`

        echo "Waiting for massagerelax area to start"
        response=$(curl --write-out %{http_code} --output /dev/null --silent http://localhost:8082/api/therapist-areas)
        until [ "200" -eq "$response" ] || [ "$COUNTER" -eq "$TIMEOUT" ]; do
          printf '.'
          sleep $WAIT_INTERVAL
          COUNTER=$(($COUNTER+$WAIT_INTERVAL))
          response=$(curl --write-out %{http_code} --output /dev/null --silent http://localhost:8082/api/therapist-areas)
        done

        if (("$COUNTER" < "$TIMEOUT")) ; then
          t1=`date +%s`
          delta=$((($t1 - $t0)/60))
          echo "Area started in $delta minutes"
        else
          echo "Waited $COUNTER seconds"
          echo "Area could not start in time."
          echo "The last response code from /api/therapist-areas was $response"
          exit 1
        fi
      - cd ..
    script: travis_wait 30 node_modules/.bin/newman run test/area.postman_collection.json -e test/tests.postman_environment.json

install:
  - npm install newman
  - travis_retry mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

after_success:
  - cp .travis/settings.xml $HOME/.m2/settings.xml
  - |
    if [ "$TRAVIS_BRANCH" = master ]; then
      mvn clean install -Pmaster -DskipTests;
    else
      tag_name=`echo $TRAVIS_BRANCH | tr / - `;
      mvn clean install -Pfeature -DskipTests -Dfeature.image.tag=$tag_name;
    fi

before_script:
  # Print build info that binary is compiled with.
  - echo $TRAVIS_COMMIT
  - echo $TRAVIS_TAG
  - echo $TRAVIS_BRANCH
  - echo $TRAVIS_BUILD_NUMBER
  - echo $TRAVIS_REPO_SLUG
  - node --version
  - npm --version
  - node_modules/.bin/newman --version

before_install:
  # troubleshooting info in case of problems
  - docker version
  - docker info
